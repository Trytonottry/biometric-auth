import React, { useState } from 'react';
import './App.css';

function App() {
  const [username, setUsername] = useState('');
  const [methods, setMethods] = useState([]);
  const [message, setMessage] = useState('');

  const handleLogin = async () => {
    const res = await fetch('/api/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ username, methods })
    });
    const data = await res.json();
    setMessage(data.message);
  };

  const handleRegister = async () => {
    const res = await fetch('/api/register', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        username,
        role: 'user',
        access_level: 1,
        enable_face: methods.includes('face')
      })
    });
    const data = await res.json();
    setMessage(data.error ? `–û—à–∏–±–∫–∞: ${data.error}` : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!');
  };

  return (
    <div className="App">
      <h1>üîê –ë–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</h1>

      <input
        placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        value={username}
        onChange={(e) => setUsername(e.target.value)}
      />

      <div>
        <label><input type="checkbox" value="face"
          onChange={(e) => e.target.checked ? setMethods([...methods, 'face']) : setMethods(methods.filter(m => m !== 'face'))}
        /> –õ–∏—Ü–æ</label>

        <label><input type="checkbox" value="fingerprint"
          onChange={(e) => e.target.checked ? setMethods([...methods, 'fingerprint']) : setMethods(methods.filter(m => m !== 'fingerprint'))}
        /> –û—Ç–ø–µ—á–∞—Ç–æ–∫</label>

        <label><input type="checkbox" value="iris"
          onChange={(e) => e.target.checked ? setMethods([...methods, 'iris']) : setMethods(methods.filter(m => m !== 'iris'))}
        /> –†–∞–¥—É–∂–∫–∞</label>
      </div>

      <button onClick={handleLogin}>–í–æ–π—Ç–∏</button>
      <button onClick={handleRegister}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>

      {message && <p className="message">{message}</p>}
    </div>
  );
}

export default App;